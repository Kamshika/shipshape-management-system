create table shipshape.customers
(
    customer_id int auto_increment
        primary key,
    name        varchar(100) not null,
    address     text         null,
    mobile      varchar(20)  null,
    email       varchar(100) null
);

create table shipshape.jobtype
(
    job_type_id int auto_increment
        primary key,
    type_name   varchar(50) not null
);

create table shipshape.orders
(
    order_id            int auto_increment
        primary key,
    customer_id         int            null,
    order_date          date           null,
    status              varchar(50)    null,
    total_price         decimal(10, 2) null,
    is_repair           tinyint(1)     null,
    repair_service_fee  decimal(10, 2) null,
    is_repaint          tinyint(1)     null,
    repaint_service_fee decimal(10, 2) null,
    constraint orders_ibfk_1
        foreign key (customer_id) references shipshape.customers (customer_id)
);

create index customer_id
    on shipshape.orders (customer_id);

create table shipshape.ordertype
(
    order_type_id int auto_increment
        primary key,
    type_name     varchar(50) not null
);

create table shipshape.properties
(
    property_key varchar(50) not null
        primary key,
    value        varchar(50) not null,
    type         varchar(50) not null,
    constraint unique_property_key_type
        unique (property_key, type)
);

create table shipshape.roles
(
    role_id   int auto_increment
        primary key,
    role_name varchar(50) not null,
    constraint role_name
        unique (role_name)
);

create table shipshape.employees
(
    employee_id int auto_increment
        primary key,
    title       varchar(100) null,
    first_name  varchar(100) not null,
    last_name   varchar(100) not null,
    username    varchar(100) not null,
    address     text         null,
    mobile      varchar(20)  null,
    email       varchar(100) null,
    password    varchar(100) not null,
    schedule    text         null,
    role_id     int          not null,
    constraint username
        unique (username),
    constraint employees_ibfk_1
        foreign key (role_id) references shipshape.roles (role_id)
);

create index role_id
    on shipshape.employees (role_id);

create table shipshape.jobs
(
    job_id          int auto_increment
        primary key,
    order_id        int         not null,
    employee_id     int         null,
    job_description text        null,
    start_date      date        null,
    end_date        date        null,
    status          varchar(50) null,
    assigned_date   date        null,
    job_type_id     int         not null,
    constraint unique_order_jobtype
        unique (order_id, job_type_id),
    constraint jobs_ibfk_1
        foreign key (order_id) references shipshape.orders (order_id)
            on delete cascade,
    constraint jobs_ibfk_2
        foreign key (employee_id) references shipshape.employees (employee_id),
    constraint jobs_ibfk_3
        foreign key (job_type_id) references shipshape.jobtype (job_type_id)
);

create index employee_id
    on shipshape.jobs (employee_id);

create index job_type_id
    on shipshape.jobs (job_type_id);

create table shipshape.suppliers
(
    supplier_id   int auto_increment
        primary key,
    name          varchar(100) not null,
    contact_name  varchar(100) null,
    contact_email varchar(100) null,
    contact_phone varchar(20)  null,
    address       text         null
);

create table shipshape.parts
(
    part_id     int auto_increment
        primary key,
    name        varchar(100)   not null,
    description text           null,
    price       decimal(10, 2) null,
    supplier_id int            null,
    constraint parts_ibfk_1
        foreign key (supplier_id) references shipshape.suppliers (supplier_id)
);

create table shipshape.inventory
(
    inventory_id int auto_increment
        primary key,
    part_id      int          null,
    quantity     int          null,
    location     varchar(100) null,
    constraint inventory_ibfk_1
        foreign key (part_id) references shipshape.parts (part_id)
);

create index part_id
    on shipshape.inventory (part_id);

create table shipshape.notifications
(
    notification_id int auto_increment
        primary key,
    part_id         int          null,
    min_quantity    int          null,
    notify          tinyint(1)   null,
    part_name       varchar(100) null,
    constraint unique_part_id
        unique (part_id),
    constraint notification_ibfk_1
        foreign key (part_id) references shipshape.parts (part_id)
);

create index part_id
    on shipshape.notifications (part_id);

create table shipshape.order_part
(
    order_part_id    int auto_increment
        primary key,
    sales_date       date           null,
    part_id          int            null,
    part_description text           null,
    supplier_id      int            null,
    quantity         int            null,
    order_type_id    int            null,
    price            decimal(10, 2) null,
    order_id         int            null,
    constraint unique_order_part
        unique (order_id, part_id),
    constraint sales_fk_order_id
        foreign key (order_id) references shipshape.orders (order_id)
            on delete cascade,
    constraint sales_fk_order_type_id
        foreign key (order_type_id) references shipshape.ordertype (order_type_id),
    constraint sales_fk_product_id
        foreign key (part_id) references shipshape.parts (part_id),
    constraint sales_fk_supplier_id
        foreign key (supplier_id) references shipshape.suppliers (supplier_id)
);

create index supplier_id
    on shipshape.parts (supplier_id);

